<?xml version="1.0" encoding="utf-8"?>

<launch>

  <arg name="registration_config_file"         default="$(find aicp_core)/config/icp/icp_autotuned.yaml"/>
  <arg name="aicp_config_file"                 default="$(find aicp_core)/config/aicp_config.yaml"/>
  <arg name="fixed_frame"                      default="map"/>
  <!-- <arg name="map_from_file_path"               default="$(find gazebo_worlds_drs)/point_clouds/fire_college.ply"/> -->
  <arg name="map_from_file_path"               default=""/>
  <arg name="load_map_from_file"               default="false"/>
  <arg name="localize_against_prior_map"       default="false"/>
  <arg name="localize_against_built_map"       default="false"/>
  <arg name="merge_aligned_clouds_to_map"      default="true"/>
  
  <!-- Registration params -->
  <arg name="registration_default_config_file" default="$(find aicp_core)/config/icp/icp_autotuned_default.yaml" />
  <!-- Classification params (Alignment Risk) -->
  <arg name="trainingFile"                     default="$(find aicp_core)/data/labels/training_all_labelled_1Sep.txt"/>
  <arg name="testingFile"                      default="$(find aicp_core)/data/labels/testing_labelled_27Aug.txt"/>
  <arg name="saveFile"                         default="$(find aicp_core)/data/classification/svm_1000training_thresh50_cross_validation_opencv3.xml"/>
  <arg name="saveProbs"                        default="$(find aicp_core)/data/classification/probs_opencv3.txt"/>
  <arg name="modelLocation"                    default="$(find aicp_core)/data/models/svm_opencv3.xml" />

  <arg name="lidar_channel"                    default="/point_cloud_filter/velodyne/point_cloud_filtered"/>
  <arg name="batch_size"                       default="7"/>

  <arg name="verbose"                          default="false" />

  <arg name="inertial_frame"                   default="/odom"/>
  <arg name="pose_odom"                        default="/state_estimator/pose_in_odom"/>

  <arg name="write_input_clouds_to_file"       default="false"/>
  <arg name="process_input_clouds_from_file"   default="false"/>
  <arg name="process_input_clouds_folder"      default="/tmp/aicp_data/"/>

  <!-- Run AICP (command line configuration) -->
  <node pkg="aicp_ros" type="aicp_ros_node" name="aicp_ros_node" output="screen">

    <param name="registration_config_file"      value="$(arg registration_config_file)" />
    <param name="registration_default_config_file" value="$(arg registration_default_config_file)" />

    <param name="aicp_config_file"              value="$(arg aicp_config_file)" />
    <!-- In ROS should always be set to debug mode -->
    <param name="working_mode"                  value="debug" />
    <!-- Fixed frame (default: map, debug: map_test -->
    <param name="fixed_frame"                   value="$(arg fixed_frame)" />
    <!-- default is /aicp/pose_corrected -->
    <param name="output_channel"                value="/aicp/pose_corrected" />

    <param name="inertial_frame"                value="$(arg inertial_frame)" />

    <param name="pose_body_channel"             value="$(arg pose_odom)" />

    <param name="lidar_channel"                 value="$(arg lidar_channel)" />

    <!-- Prior map info -->
    <param name="load_map_from_file"            value="$(arg load_map_from_file)" />
    <param name="map_from_file_path"            value="$(arg map_from_file_path)" />
    <param name="localize_against_prior_map"    value="$(arg localize_against_prior_map)" />
    <param name="localize_against_built_map"    value="$(arg localize_against_built_map)" /> <!-- implicit loop closure when revisit known place -->

    <param name="trainingFile"                  value="$(arg trainingFile)" />
    <param name="testingFile"                   value="$(arg testingFile)" />
    <param name="saveFile"                      value="$(arg saveFile)" />
    <param name="saveProbs"                     value="$(arg saveProbs)" />
    <param name="modelLocation"                 value="$(arg modelLocation)" />

    <!-- Prior map params -->
    <param name="crop_map_around_base"          value="15.0" /> <!-- box dimesions: value*2 x value*2 -->
                                                                <!-- 15.0 to generate Ground Truth (David IROS19) -->
    <param name="merge_aligned_clouds_to_map"   value="$(arg merge_aligned_clouds_to_map)" /> <!-- true to generate Ground Truth (David IROS19) -->
    <!-- Reference update policy -->
    <param name="failure_prediction_mode"       value="false" />
    <param name="reference_update_frequency"    value="5" />
    <!-- Max allowed correction magnitude (probably failed alignment otherwise) -->
    <param name="max_correction_magnitude"      value="1.0" /> <!-- 1.5 to generate Ground Truth (David IROS19) -->
    <!-- Max length of the queue of accumulated point clouds. was 100 previously -->
    <param name="max_queue_size"      value="1" />

    <!-- 3D point cloud characteristics -->
    <param name="batch_size"                    value="$(arg batch_size)" />
  	<!-- Visualize and store -->
    <param name="verbose"                       value="$(arg verbose)" />

    <!-- Write out incoming data to file -->
    <param name="write_input_clouds_to_file"    value="$(arg write_input_clouds_to_file)" />
    <!-- Read incoming data from file -->
    <param name="process_input_clouds_from_file" value="$(arg process_input_clouds_from_file)" />
    <!-- Read incoming data from file -->
    <param name="process_input_clouds_folder"   value="$(arg process_input_clouds_folder)" />

  </node>

</launch>
