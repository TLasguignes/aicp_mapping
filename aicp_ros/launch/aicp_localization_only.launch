<?xml version="1.0" encoding="utf-8"?>
<!-- Mode: requires a prior map, localizes against it -->

<launch>

  <arg name="fixed_frame"                  default="map"/>
  <!-- <arg name="map_from_file_path"           default="$(find gazebo_worlds_drs)/point_clouds/fire_college.ply"/> -->
  <arg name="map_from_file_path"           default=""/>
  <arg name="load_map_from_file"           default="true"/>
  <arg name="localize_against_prior_map"   default="true"/>
  <arg name="merge_aligned_clouds_to_map"  default="true"/>

  <arg name="lidar_channel"          default="/point_cloud_filter/velodyne/point_cloud_filtered"/>
  <arg name="batch_size"             default="7"/>

  <arg name="verbose"                default="false" />

  <arg name="pose_odom"              default="/state_estimator/pose_in_odom"/>
  <arg name="inertial_frame"         default="/odom"/>

  <include file="$(find aicp_ros)/launch/aicp.launch">
    <arg name="fixed_frame"                 value="$(arg fixed_frame)"/>
    <arg name="map_from_file_path"          value="$(arg map_from_file_path)"/>
    <arg name="load_map_from_file"          value="$(arg load_map_from_file)"/>
    <arg name="localize_against_prior_map"  value="$(arg localize_against_prior_map)"/>
    <arg name="merge_aligned_clouds_to_map" value="$(arg merge_aligned_clouds_to_map)"/>

    <arg name="lidar_channel" value="$(arg lidar_channel)"/>
    <arg name="batch_size"    value="$(arg batch_size)"/>
    
    <arg name="verbose"       value="$(arg verbose)" />

    <arg name="pose_odom"     value="$(arg pose_odom)"/>

    <arg name="inertial_frame" value="$(arg inertial_frame)"/>
  </include>
  
  <!-- Initial pose guess -->
  <!-- - set using set_aicp_initial_guess.py, for specific log -->
  <!-- - or set using interaction marker from ui -->
  <!-- <node pkg="aicp_ros" name="set_aicp_initial_guess" type="set_aicp_initial_guess.py" args="$(arg fixed_frame)" output="screen"> 
  </node>  -->

</launch>
